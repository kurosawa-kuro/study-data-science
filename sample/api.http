@localHost = localhost
@port = 8000

### Base URLs
@localBaseUrl = http://{{localHost}}:{{port}}


### /
GET {{localBaseUrl}}/

### /docs
http://127.0.0.1:8000/docs

### create user

# ユーザー作成
# @router.post("/users/", response_model=UserResponseSchema)
# def create_user(
#     data: UserPostSchema, 
#     session: Session = Depends(get_session),
#     _: User = Depends(auth.get_current_user([PermissionType.USER_CREATE]))
# ):
#     # デバッグ出力
#     print(f"data: {data}")
#     user = session.query(User).filter(User.username == data.username).first()
#     if user:
#         raise HTTPException(status_code=400, detail=f"{data.username} is already exists.")

#     # idからロールを取得
#     roles = []
#     for role_id in data.role_ids:
#         role = session.query(Role).filter(Role.id == role_id).first()
#         if role is None:
#             raise HTTPException(status_code=404, detail=f"Role is not found. (id={role_id})")
#         roles.append(role)

#     user = User(
#         username=data.username,
#         hashed_password=auth.hash(data.password),
#         age=data.age,
#         roles=roles,
#     )
#     session.add(user)
#     session.commit()
#     session.refresh(user)
#     return user

POST {{localBaseUrl}}/api/v1/users
Content-Type: application/json

{
    "username": "testuser",
    "password": "testpassword",
    "age": 25,
    "role_ids": [1]
}

### get token

POST {{localBaseUrl}}/api/v1/token
Content-Type: application/x-www-form-urlencoded

username=sys_admin&password=password


